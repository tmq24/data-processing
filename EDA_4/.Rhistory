library(dplyr)
library(ggplot2)
data_birth <- read.table("birthwt.txt", header = TRUE)
setwd("~/data processing")
setwd("~/data processing")
setwd("~/data processing/EDA_4")
data_birth <- read.table("birthwt.txt", header = TRUE)
boot_mean_lwt <- function(data, ind) {
return(mean(data[ind, "lwt"]))
}
set.seed(123)
out_lwt <- boot(data = data_birth, statistic = boot_mean_lwt, R = 1000)
library(boot)
boot_mean_lwt <- function(data, ind) {
return(mean(data[ind, "lwt"]))
}
set.seed(123)
out_lwt <- boot(data = data_birth, statistic = boot_mean_lwt, R = 1000)
out_lwt
boot.ci(out_lwt, type = "perc", conf = 0.95)
boot_median_age <- function(data, ind) {
return(median(data[ind, "age"]))
}
out_age <- boot(data = data_birth, statistic = boot_median_age, R = 1000)
out_age
boot.ci(out_age, type = "perc", conf = 0.95)
data_state <- read.table("state.csv", header = TRUE)
data_state
library(nycflights13)
data(flights)
glimpse(flights)
sample_250 <- flights %>% slice_sample(250)
rlang::last_trace()
library(dplyr)
sample_250 <- flights %>% slice_sample(250)
rlang::last_trace()
sample_250 <- flights %>% slice_sample(n = 250)
set.seed(3213123)
sample_250 <- flights %>% slice_sample(n = 250)
boot_mean_dep_delay <- function(data, ind){
mean(data[ind, "dep_delay"], na.rm = TRUE)
}
out_delay_250 <- boot(data = sample_250, statistic = boot_mean_dep_delay, R = 1000)
print(out_delay_250)
boot.ci(out_delay_250, type = "perc", conf = 0.95)
sample_250 <- flights %>% slice_sample(n = 250)
boot_mean_dep_delay <- function(data, ind){
mean(data[ind, "dep_delay"], na.rm = TRUE)
}
out_delay_250 <- boot(data = sample_250, statistic = boot_mean_dep_delay, R = 1000)
print(out_delay_250)
boot.ci(out_delay_250, type = "perc", conf = 0.95)
mean_dep_delay_1000 <- replicate(
n = 1000,
expr = {
flights %>%
slice_sample(n = 250, replace = TRUE) %>%
summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
pull(mean_dep_delay)
}
)
bootstrap_distn_dep_delay <- tibble(
resample_mean_dep_delay = mean_dep_delay_1000
)
bootstrap_distn_dep_delay
source("~/data processing/EDA_4/EDA4.R")
library(dplyr)
library(ggplot2)
library(boot)
data_birth <- read.table("birthwt.txt", header = TRUE)
boot_mean_lwt <- function(data, ind) {
return(mean(data[ind, "lwt"]))
}
set.seed(123)
out_lwt <- boot(data = data_birth, statistic = boot_mean_lwt, R = 1000)
out_lwt
boot.ci(out_lwt, type = "perc", conf = 0.95)
boot_median_age <- function(data, ind) {
return(median(data[ind, "age"]))
}
out_age <- boot(data = data_birth, statistic = boot_median_age, R = 1000)
out_age
boot.ci(out_age, type = "perc", conf = 0.95)
boot_cor_lwt_bwt <- function(data, ind) {
return(cor(data[ind, "lwt"], data[ind, "bwt"]))
}
out_cor <- boot(data = data_birth, statistic = boot_cor_lwt_bwt, R = 1000)
out_cor
boot.ci(out_cor, type = "perc", conf = 0.95)
data_state <- read.table("state.csv", header = TRUE)
boot_mean_weighted <- function(data, ind){
weighted.mean(data[ind, "murder_rate"], data[ind, "population"])
}
out_murder <- boot(data = data_state, statistic = boot_mean_weighted, R = 1000)
out_murder
boot.ci(out_murder, type = "perc", conf = 0.95)
set.seed(123)
boot_mean_lwt <- function(data, ind) {
return(mean(data[ind, "lwt"]))
}
out_lwt <- boot(data = data_birth, statistic = boot_mean_lwt, R = 1000)
out_lwt
boot_mu_fun <- function(data, ind){
data_new <- data[ind]
out <- mean(data_new)
return(out)
}
out_lwt <- boot(data = data_birth$lwt, statistic = boot_mu_fun, R = 1000)
out_lwt
boot_mean_lwt <- function(data, ind) {
return(mean(data[ind, "lwt"]))
}
out_lwt <- boot(data = data_birth, statistic = boot_mean_lwt, R = 1000)
out_lwt
boot.ci(out_lwt, type = "perc", conf = 0.95)
boot_mu_fun <- function(data, ind){
data_new <- data[ind]
out <- mean(data_new)
return(out)
}
out_lwt <- boot(data = data_birth$lwt, statistic = boot_mu_fun, R = 1000)
out_lwt
boot.ci(out_lwt, type = "perc", conf = 0.95)
library(dplyr)
library(ggplot2)
library(boot)
data_birth <- read.table("birthwt.txt", header = TRUE)
set.seed(123)
boot_mean <- function(data, indices) {
return(mean(data[indices]))
}
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc", conf = 0.95)
# Vẽ histogram
ggplot(data.frame(t = lwt_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = lwt_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap mean lwt") + ylab("Frequency") +
theme_bw()
boot_median <- function(data, indices) {
return(median(data[indices]))
}
# Bootstrap
age_boot <- boot(data_birth$age, statistic = boot_median, R = 1000)
age_boot
boot.ci(age_boot, type = "perc", conf = 0.95)
# Vẽ histogram
ggplot(data.frame(t = age_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = age_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap median age") + ylab("Frequency") +
theme_bw()
boot_cor <- function(data, indices) {
return(cor(data[indices, "lwt"], data[indices, "bwt"]))
}
# Bootstrap
cor_boot <- boot(data_birth, statistic = boot_cor, R = 1000)
cor_boot
boot.ci(cor_boot, type = "perc")
# Vẽ histogram
ggplot(data.frame(t = cor_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = cor_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap correlation between lwt and bwt") + ylab("Frequency") +
theme_bw()
boot_mean <- function(data, index) {
return(mean(data[index]))
}
# Bootstrap
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc", conf = 0.95)
# Vẽ histogram
ggplot(data.frame(t = lwt_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = lwt_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap mean lwt") + ylab("Frequency") +
theme_bw()
weighted_mean_murder <- function(data, indices) {
d <- data[indices,]
return(weighted.mean(d$Murder.Rate, d$Population))
}
# Bootstrap
boot_results <- boot(state_data, statistic = weighted_mean_murder, R = 10000)
state_data <- read.csv("state.csv")
weighted_mean_murder <- function(data, indices) {
d <- data[indices,]
return(weighted.mean(d$Murder.Rate, d$Population))
}
# Bootstrap
boot_results <- boot(state_data, statistic = weighted_mean_murder, R = 10000)
bool_results
weighted_mean_murder <- function(data, indices) {
d <- data[indices,]
return(weighted.mean(d$Murder.Rate, d$Population))
}
# Bootstrap
boot_results <- boot(state_data, statistic = weighted_mean_murder, R = 10000)
bool_results
weighted_mean_murder <- function(data, indices) {
d <- data[indices,]
return(weighted.mean(d$Murder.Rate, d$Population))
}
# Bootstrap
boot_results <- boot(state_data, statistic = weighted_mean_murder, R = 10000)
boot_results
boot.ci(boot_results, type = "perc", conf = 0.95)
weighted_mean_murder <- function(data, indices) {
d <- data[indices,]
return(weighted.mean(d$Murder.Rate, d$Population))
}
# Bootstrap
boot_results <- boot(state_data, statistic = weighted_mean_murder, R = 10000)
boot_results
boot.ci(boot_results, type = "perc")
sample_a <- flights %>%
slice_sample(250) %>%
pull(dep_delay)
sample_a <- flights %>%
slice_sample(n = 250) %>%
pull(dep_delay)
sample_a <- flights %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_a <- boot(sample_a, statistic = boot_mean, R = 1000)
ci_a <- boot.ci(boot_a, type = "perc")
boot_mean <- function(data, index) {
return(mean(data[index], na.rm = TRUE))
}
sample_a <- flights %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_a <- boot(sample_a, statistic = boot_mean, R = 1000)
ci_a <- boot.ci(boot_a, type = "perc")
sample_a <- flights %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_a <- boot(sample_a, statistic = boot_mean, R = 1000)
boot_a
boot.ci(boot_a, type = "perc")
# (b) một mẫu ngẫu nhiên của 300 chuyến bay bất kỳ của hãng United Airline
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
ci_b <- boot.ci(boot_b, type = "perc")
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
boot.ci(boot_b, type = "perc")
winter_flights <- flights %>%
filter(month %in% c(11, 12, 1)) %>%
slice_sample(n = 1000)
# (a) Tính tỷ lệ chuyến bay có số phút cất cánh trễ nhiều hơn 30 phút.
proportion_delayed <- mean(winter_flights$dep_delay > 30, na.rm = TRUE)
# (a) Tính tỷ lệ chuyến bay có số phút cất cánh trễ nhiều hơn 30 phút.
mean(winter_flights$dep_delay > 30, na.rm = TRUE)
source("~/data processing/EDA_4/EDA4.R")
library(nycflights13)
library(dplyr)
library(boot)
library(ggplot2)
set.seed(224)
sample_a <- flights %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_a <- boot(sample_a, statistic = boot_mean, R = 1000)
boot_a
boot.ci(boot_a, type = "perc")
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
boot.ci(boot_b, type = "perc")
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
boot_c <- boot(sample_c, statistic = boot_mean, R = 1000)
boot_c
boot.ci(boot_c, type = "perc")
boot_diff_mean <- function(data, index) {
mean_b <- mean(data$b[index], na.rm = TRUE)
mean_c <- mean(data$c[index], na.rm = TRUE)
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
# (b) một mẫu ngẫu nhiên của 300 chuyến bay bất kỳ của hãng United Airline
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
boot.ci(boot_b, type = "perc")
# (c) một mẫu ngẫu nhiên của 250 chuyến bay bất kỳ của hãng Delta
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
boot_c <- boot(sample_c, statistic = boot_mean, R = 1000)
boot_c
boot.ci(boot_c, type = "perc")
boot_diff_mean <- function(data, index) {
mean_b <- mean(data$b[index], na.rm = TRUE)
mean_c <- mean(data$c[index], na.rm = TRUE)
return(mean_b - mean_c)
}
combined_data <- data.frame(b = sample_b, c = sample_c)
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_c <- boot(sample_c, statistic = boot_mean, R = 1000)
boot_c
boot.ci(boot_c, type = "perc")
boot_diff_mean <- function(data, index) {
mean_b <- mean(data$b[index], na.rm = TRUE)
mean_c <- mean(data$c[index], na.rm = TRUE)
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
boot_diff_mean <- function(data, indices) {
# Tách chỉ số cho hai mẫu
sample_b_indices <- indices[1:length(sample_b)]
sample_c_indices <- indices[(length(sample_b) + 1):length(indices)]
# Lấy mẫu lại dựa trên các chỉ số cho mỗi nhóm
mean_b <- mean(data$b[sample_b_indices], na.rm = TRUE)
mean_c <- mean(data$c[sample_c_indices], na.rm = TRUE)
# Trả về sự khác biệt giữa hai trung bình
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
boot_diff_mean <- function(data, indices) {
# indices[1] là các chỉ số cho sample_b (300 chuyến bay của UA)
sample_b_indices <- indices[1:length(sample_b)]
# indices[2] là các chỉ số cho sample_c (250 chuyến bay của DL)
sample_c_indices <- indices[(length(sample_b) + 1):length(indices)]
# Lấy lại mẫu từ sample_b và sample_c
mean_b <- mean(sample_b[sample_b_indices], na.rm = TRUE)
mean_c <- mean(sample_c[sample_c_indices], na.rm = TRUE)
# Trả về sự khác biệt giữa trung bình của hai mẫu
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_diff_mean <- function(data, index) {
mean_b <- mean(data$b[index], na.rm = TRUE)
mean_c <- mean(data$c[index], na.rm = TRUE)
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
# Bootstrap
boot_diff <- boot(combined_data, statistic = boot_diff_mean, R = 1000)
boot_diff
boot.ci(boot_diff, type = "perc")
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
boot.ci(boot_b, type = "perc")
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_c <- boot(sample_c, statistic = boot_mean, R = 1000)
boot_c
boot.ci(boot_c, type = "perc")
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_diff_mean <- function(data, index) {
mean_b <- mean(data$b[index], na.rm = TRUE)
mean_c <- mean(data$c[index], na.rm = TRUE)
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
# Bootstrap
boot_diff <- boot(combined_data, statistic = boot_diff_mean, R = 1000)
boot_diff
boot.ci(boot_diff, type = "perc")
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
boot.ci(boot_b, type = "perc")
# (c) một mẫu ngẫu nhiên của 250 chuyến bay bất kỳ của hãng Delta
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_c <- boot(sample_c, statistic = boot_mean, R = 1000)
boot_c
boot.ci(boot_c, type = "perc")
boot_diff_mean <- function(data, index) {
mean_b <- mean(data$b[index], na.rm = TRUE)
mean_c <- mean(data$c[index], na.rm = TRUE)
return(mean_b - mean_c)
}
boot_diff <- boot(data = list(sample_b = sample_b, sample_c = sample_c), statistic = boot_diff_mean, R = 1000)
boot_diff
boot.ci(boot_diff, type = "perc")
winter_flights <- flights %>%
filter(month %in% c(11, 12, 1)) %>%
slice_sample(n = 1000)
mean(winter_flights$dep_delay > 30, na.rm = TRUE)
boot_prop <- function(data, index) {
return(mean(data$dep_delay[index] > 30, na.rm = TRUE))
}
boot_prop <- boot(winter_flights, statistic = boot_prop, R = 1000)
boot_prop
boot.ci(boot_prop, type = "perc")
ev_dl_flights <- flights %>%
filter(carrier %in% c("EV", "DL"), month %in% c(11, 12, 1))
boot_diff_prop <- function(data, index) {
ev_prop <- mean(data$dep_delay[data$carrier == "EV"][index] > 30, na.rm = TRUE)
dl_prop <- mean(data$dep_delay[data$carrier == "DL"][index] > 30, na.rm = TRUE)
return(ev_prop - dl_prop)
}
boot_diff_prop <- boot(ev_dl_flights, statistic = boot_diff_prop, R = 1000)
boot_diff_prop
boot.ci(boot_diff_prop, type = "perc")
setwd("~/data processing/EDA_4")
source("~/data processing/EDA_4/EDA4.R")
library(dplyr)
library(ggplot2)
library(boot)
data_birth <- read.table("birthwt.txt", header = TRUE)
set.seed(123)
set.seed(123)
source("~/data processing/EDA_4/EDA4.R")
boot_mean <- function(data, index) {
return(mean(data[index]))
}
# Bootstrap
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc")
# Vẽ histogram
ggplot(data.frame(t = lwt_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = lwt_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap mean lwt") + ylab("Frequency") +
theme_bw()
boot_mean <- function(data, index) {
return(mean(data[index]))
}
# Bootstrap
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc")
# Vẽ histogram
ggplot(data.frame(t = lwt_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = lwt_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap mean lwt") + ylab("Frequency") +
theme_bw()
boot_mean <- function(data, index) {
return(mean(data[index]))
}
# Bootstrap
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc")
# Vẽ histogram
ggplot(data.frame(t = lwt_boot$t), aes(x = t)) +
geom_histogram(fill = "gray80", color = "black", bins = 30) +
geom_vline(xintercept = lwt_boot$t0, color = "blue", linetype = "dashed") +
xlab("bootstrap mean lwt") + ylab("Frequency") +
theme_bw()

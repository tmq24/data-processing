library(dplyr)
library(ggplot2)
library(boot)
data_birth <- read.table("birthwt.txt", header = TRUE)
setwd("~/data processing/EDA_4")
data_birth <- read.table("birthwt.txt", header = TRUE)
set.seed(123)
boot_mean <- function(data, ind) {
data_new <- data[ind]
return(mean(data_new))
}
# Bootstrap
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc")
boot_mean <- function(data, ind) {
data_new <- data[ind]
return(mean(data_new))
}
# Bootstrap
lwt_boot <- boot(data_birth$lwt, statistic = boot_mean, R = 1000)
lwt_boot
boot.ci(lwt_boot, type = "perc")
data_birth <- read.table("birthwt.txt", header = TRUE)
set.seed(123)
head(data_birth)
View(data_birth)
# cánh trễ trong cách kịch bản sau:
library(nycflights13)
library(dplyr)
library(boot)
library(ggplot2)
set.seed(224)
boot_mean <- function(data, i) {
return(mean(data[i], na.rm = TRUE))
}
# (a) Mẫu ngẫu nhiên của 250 chuyến bay bất kỳ trong năm 2013
sample_a <- flights %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_a <- boot(sample_a, statistic = boot_mean, R = 1000)
boot_a
boot.ci(boot_a, type = "perc")
sample_b <- flights %>%
filter(carrier == "UA") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_b <- boot(sample_b, statistic = boot_mean, R = 1000)
boot_b
boot.ci(boot_b, type = "perc")
# (c) một mẫu ngẫu nhiên của 250 chuyến bay bất kỳ của hãng Delta
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 250) %>%
pull(dep_delay)
boot_c <- boot(sample_c, statistic = boot_mean, R = 1000)
boot_c
boot.ci(boot_c, type = "perc")
set.seed(123)
sample_b <- flights %>%
filter(carrier == "UA") %>%
sample_n(300) %>%
pull(dep_delay)
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
combined_bc_sample <- data.frame(b = sample_b, c = sample_c)
combined_bc_sample <- tibble(b = sample_b, c = sample_c)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
combined_bc_sample <- tibble( carrier = c(rep("UA", 300), rep("DL", 250)),
dep_delay = c(sample_b, sample_c))
combined_data
combined_bc_sample
combined_data <- data.frame(b = sample_b, c = sample_c)
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
combined_data <- data.frame(b = sample_b, c = sample_c)
combined_data
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
sample_c
set.seed(123)
sample_b <- flights %>%
filter(carrier == "UA") %>%
sample_n(300) %>%
pull(dep_delay)
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
combined_bc_sample <- tibble( carrier = c(rep("UA", 300), rep("DL", 250)),
dep_delay = c(sample_b, sample_c))
combined_bc_sample
mean_diff_1000 <- replicate(
n = 1000,
expr = combined_bc_sample %>%
slice_sample(prop = 1, replace = TRUE) %>%
group_by(carrier) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
pull(mean_dep_delay) %>%
pivot_wider(names_from = carrier, values_from = mean_dep_delay) %>%
mutate(diff = UA - DL) %>%
pull(diff)
)
library(tidyr)
mean_diff_1000 <- replicate(
n = 1000,
expr = combined_bc_sample %>%
slice_sample(prop = 1, replace = TRUE) %>%
group_by(carrier) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
pull(mean_dep_delay) %>%
pivot_wider(names_from = carrier, values_from = mean_dep_delay) %>%
mutate(diff = UA - DL) %>%
pull(diff)
)
mean_diff_1000 <- replicate(
n = 1000,
expr = combined_bc_sample %>%
slice_sample(prop = 1, replace = TRUE) %>%
group_by(carrier) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
pivot_wider(names_from = carrier, values_from = mean_dep_delay) %>%
mutate(diff = UA - DL) %>%
pull(diff)
)
mean_diff_1000
mean_diff_1000
bootstrap_distn <- tibble(resample_mean_diff = mean_diff_1000)
bootstrap_distn
bootstrap_distn
boot.ci(bootstrap_distn, type = "perc")
mean_diff_1000
sample_c <- flights %>%
filter(carrier == "DL") %>%
slice_sample(n = 300) %>%
pull(dep_delay)
boot_diff_mean <- function(data1, data2) {
mean_b <- mean(data$b[i], na.rm = TRUE)
mean_c <- mean(data$c[i], na.rm = TRUE)
return(mean_b - mean_c)
}
# ghép 2 mẫu vào 1 data frame
combined_data <- data.frame(b = sample_b, c = sample_c)
combined_data
library(tidyr)
set.seed(123)
sample_b <- flights %>%
filter(carrier == "UA") %>%
sample_n(300) %>%
pull(dep_delay)
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
combined_bc_sample <- tibble( carrier = c(rep("UA", 300), rep("DL", 250)),
dep_delay = c(sample_b, sample_c))
combined_bc_sample
View(combined_bc_sample)
View(combined_bc_sample)
combined_sample <-  combined_bc_sample %>%
slice_sample(prop = 1, replace = TRUE) %>%
group_by(carrier) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
pivot_wider(names_from = carrier, values_from = mean_dep_delay) %>%
mutate(diff = UA - DL) %>%
pull(diff)
combined_sample
combined_bc_sample <- tibble( carrier = c(rep("UA", 300), rep("DL", 250)),
dep_delay = c(sample_b, sample_c))
mean_diff_1000 <- replicate(
n = 1000,
expr = combined_bc_sample %>%
slice_sample(prop = 1, replace = TRUE) %>%
group_by(carrier) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
pivot_wider(names_from = carrier, values_from = mean_dep_delay) %>%
mutate(diff = UA - DL) %>%
pull(diff)
)
mean_diff_1000
bootstrap_distn <- tibble(resample_mean_diff = mean_diff_1000)
bootstrap_distn
ggplot(bootstrap_distn, aes(x = resample_mean_diff )) +
geom_hist( bins = 30, fill = "gray80", color = "black")
ggplot(bootstrap_distn, aes(x = resample_mean_diff )) +
geom_histogram( bins = 30, fill = "gray80", color = "black")
mean_diff_1000 <- replicate(
n = 1000,
expr = {
resample_UA <- sample(sample_b, size = 300, replace = TRUE)
resample_DL <- sample(sample_c, size = 250, replace = TRUE)
mean(resample_UA, na.rm = TRUE) - mean(resample_DL, na.rm = FALSE)
}
)
mean_diff_1000
mean_diff_1000 <- replicate(
n = 1000,
expr = {
resample_UA <- sample(sample_b, size = 300, replace = TRUE)
resample_DL <- sample(sample_c, size = 250, replace = TRUE)
mean(resample_UA, na.rm = TRUE) - mean(resample_DL, na.rm = TRUE)
}
)
mean_diff_1000
mean_diff_1000
bootstrap_distn <- tibble(resample_mean_diff = mean_diff_1000)
bootstrap_distn
clearPushBack()
library(tidyr)
library(nycflights13)
library(dplyr)
library(boot)
library(ggplot2)
set.seed(224)
sample_b <- flights %>%
filter(carrier == "UA") %>%
sample_n(300) %>%
pull(dep_delay)
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
mean_diff_1000 <- replicate(
n = 1000,
expr = {
resample_UA <- sample(sample_b, size = 300, replace = TRUE)
resample_DL <- sample(sample_c, size = 250, replace = TRUE)
mean(resample_UA, na.rm = TRUE) - mean(resample_DL, na.rm = TRUE)
}
)
mean_diff_1000
library(tidyr)
set.seed(123)
sample_b <- flights %>%
filter(carrier == "UA") %>%
sample_n(300) %>%
pull(dep_delay)
sample_c <- flights %>%
filter(carrier == "DL") %>%
sample_n(250) %>%
pull(dep_delay)
compare.two.sample(sample_b, sample_c, fun=mean, R=1e3)$p.value
find("compare.two.sample")
find("boot.ci")
install.packages('FertBoot')
library(FertBoot)
compare.two.sample(sample_b, sample_c, fun=mean, R=1e3)$p.value
f.Q1 <- function(x) quantile(x, probs=0.25)
compare.two.sample(sample_b, sample_c, fun=f.Q1, R=1e3)$p.value
compare.two.sample(sample_b, sample_c, fun=mean, R=1e3)$p.value
f.Q1 <- function(x) quantile(x, probs=0.25)
compare.two.sample(sample_b, sample_c, fun=f.Q1, R=1e3)$p.value
compare.two.sample(sample_b, sample_c, fun=mean, R=1e3)$p.value
f.Q1 <- function(x) quantile(x, probs=0.25, na.rm=TRUE)
View(f.Q1)
View(f.Q1)
set.seed(1203)
# compare median of two expontential r.v.
compare.two.sample(rexp(100, rate=1), rexp(100, rate=2), fun=median, R=1e3)$p.value
f.Q1 <- function(x) quantile(x, probs=0.25)
compare.two.sample(rnorm(100, mean=0), rnorm(200, mean=0.5), fun=f.Q1, R=1e3)$p.value
compare.two.sample(sample_b, sample_c, fun=mean, R=1e3)$p.value
f.Q1 <- function(x) quantile(x, probs=0.25, na.rm=TRUE)
compare.two.sample(sample_b, sample_c, fun=f.Q1, R=1e3)$p.value
compare.two.sample(rexp(100, rate=1), rexp(100, rate=2), fun=mean, R=1e3)$p.value
f.Q1 <- function(x) quantile(x, probs=0.25)
compare.two.sample(rnorm(100, mean=0), rnorm(200, mean=0.5), fun=f.Q1, R=1e3)$p.value
compare.two.sample(sample_b, sample_c, fun=mean, na.rm=TRUE, R=1e3)$p.value
ev_dl_flights <- flights %>%
filter(carrier %in% c("EV", "DL"), month %in% c(11, 12, 1))
boot_diff_prop <- function(data, i) {
ev_prop <- mean(data$dep_delay[data$carrier == "EV"][i] > 30, na.rm = TRUE)
dl_prop <- mean(data$dep_delay[data$carrier == "DL"][i] > 30, na.rm = TRUE)
return(ev_prop - dl_prop)
}
boot_diff_prop <- boot(ev_dl_flights, statistic = boot_diff_prop, R = 1000)
boot_diff_prop
boot.ci(boot_diff_prop, type = "perc")
ev_dl_flights <- flights %>%
filter(carrier %in% c("EV", "DL"))
boot_diff_prop <- function(data, i) {
ev_prop <- mean(data$dep_delay[data$carrier == "EV"][i] > 30, na.rm = TRUE)
dl_prop <- mean(data$dep_delay[data$carrier == "DL"][i] > 30, na.rm = TRUE)
return(ev_prop - dl_prop)
}
boot_diff_prop <- boot(ev_dl_flights, statistic = boot_diff_prop, R = 1000)
boot_diff_prop
boot.ci(boot_diff_prop, type = "perc")
library(dplyr)
library(ggplot2)
setwd("~/data processing/EDA_5")
data_web <- read_csv(file = "datasets/web_page_data.csv")
data_web <- read.csv(file = "datasets/web_page_data.csv")
setwd("~/data processing/EDA_5")
library(dplyr)
library(ggplot2)
data_web <- read_csv(file = "web_page_data.csv")
library(dplyr)
library(ggplot2)
data_web <- read.csv(file = "web_page_data.csv")
data_web <- data_web %>%  clean_names()
library(dplyr)
library(ggplot2)
data_web <- read.csv(file = "web_page_data.csv")
data_web <- data_web %>%  clean.names()
library(dplyr)
library(janitor)
data_web <- read.csv(file = "web_page_data.csv")
data_web <- data_web %>%  clean_names()
glimpse(data_web)
ggplot(data_web, aes(x = page, y = time, fill = page)) +
geom_violin() +
geom_boxplot(width = 0.15) +
scale_fill_manual(breaks = c("Page A", "Page B"),
values = c("forestgreen", "skyblue")) +
labs(x = "Page", y = "Session Time (in seconds)") +
them_bw() +
theme(legend.position = "none")
library(ggplot2)
ggplot(data_web, aes(x = page, y = time, fill = page)) +
geom_violin() +
geom_boxplot(width = 0.15) +
scale_fill_manual(breaks = c("Page A", "Page B"),
values = c("forestgreen", "skyblue")) +
labs(x = "Page", y = "Session Time (in seconds)") +
them_bw() +
theme(legend.position = "none")
ggplot(data_web, aes(x = page, y = time, fill = page)) +
geom_violin() +
geom_boxplot(width = 0.15) +
scale_fill_manual(breaks = c("Page A", "Page B"),
values = c("forestgreen", "skyblue")) +
labs(x = "Page", y = "Session Time (in seconds)") +
theme_bw() +
theme(legend.position = "none")
ggplot(data_web, aes(x = page, y = time, fill = page)) +
geom_violin() +
geom_boxplot(width = 0.15) +
scale_fill_manual(breaks = c("Page A", "Page B"),
values = c("forestgreen", "skyblue")) +
labs(x = "Page", y = "Session Time (in seconds)") +
theme_bw() +
theme(legend.position = "none")
perm_fun <- function(x, nA, nB, R) {
n <- nA + nB
mean_diff <- numeric(R)
for (i in 1:R){
idx_a <- sample(x = 1:n, size = nA)
idx_b <- setdiff(x = 1:n, y = idx_a)
mean_diff[i] <- mean(x[idx_a]) - mean(x[idx_b])
}
return(mean_diff)
}
set.seed(21)
diff_mean_perm <- perm_fun(data_web$time, nA = 21, nB = 15, R = 1000)
ggplot(data = tibble(perm_diffs = diff_mean_perm), aes(x = perm_diffs)) +
geom_histogram(bins = 10, fill = "gray80", color = "black") +
labs(x = "Session time differences (in seconds)", y = "Frequency") +
theme_bw()
mean_a <- mean(data_web$time[data_web$page == 'Page A'])
mean_b <- mean(data_web$time[data_web$page == 'Page B'])
mean(diff_mean_perm < (mean_a - mean_b))

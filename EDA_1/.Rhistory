library(tidyverse)
data_students <- read_csv("data/students.csv")
setwd("~/data processing/R290924")
setwd("~/data processing/R290924")
setwd("~/data processing/R290924")
data_students
data_students <- read_csv("students.csv")
data_students
data_students <- read_csv("students.csv",  na = c("", "NA", "N/A") )
data_students
data_students <- read_csv("students.csv")
data_students
library(janitor)
library(janitor)
data_students <- data_students %>% clean_names()
data_students <- data_students %>% clean_names()
data_students
data_students <- read_csv("students.csv",  na = c("", "NA", "N/A") )
data_students <- read_csv("students.csv",  na = c("", "NA", "N/A") )
library(tidyverse)
data_students <- read_csv("students.csv",  na = c("", "NA", "N/A") )
data_students
data_students <- data_students %>% clean_names()
library(tidyverse)
data_students <- read_csv("students.csv",  na = c("", "NA", "N/A") )
data_students
library(janitor)
data_students <- data_students %>% clean_names()
data_students
library(janitor)
data_students <- read_csv("datasets/students.csv", na = c("", "NA", "N/A")) |>
clean_names()
library(janitor)
data_students <- read_csv("students.csv", na = c("", "NA", "N/A")) |>
clean_names()
data_students
data_students <- read_csv("students.csv", na = c("", "NA", "N/A")) %>%
clean_names()
data_students <- read_csv("students.csv", na = c("", "NA", "N/A")) %>%
clean_names()
data_students
library(nycflights13)
data(flights)
flights
library(gapminder)
?flights
filtered_flights <- flights %>%
filter(arr_delay >= 120,
dest %in% c("IAH", "HOU"),
carrier %in% c("UA", "AA", "DL"),
month %in% c(7, 8, 9),
dep_delay <= 0,
dep_delay >= 60,
arr_delay - dep_delay > 30)
filtered_flights <- flights %>%
filter(arr_delay >= 120,
dest %in% c("IAH", "HOU"),
carrier %in% c("UA", "AA", "DL"),
month %in% c(7, 8, 9),
dep_delay <= 0,
dep_delay >= 60,
arr_delay - dep_delay > 30)
filtered_flights
library(nycflights13)
data(flights)
flights
filtered_flights <- flights %>%
filter(arr_delay >= 120,
dest %in% c("IAH", "HOU"),
carrier %in% c("UA", "AA", "DL"),
month %in% c(7, 8, 9),
dep_delay <= 0,
dep_delay >= 60,
arr_delay - dep_delay > 30)
filtered_flights
library(nycflights13)
data(flights)
filtered_flights <- flights %>%
filter(arr_delay >= 120,
dest %in% c("IAH", "HOU"),
carrier %in% c("UA", "AA", "DL"),
month %in% c(7, 8, 9),
dep_delay <= 0,
dep_delay >= 60,
arr_delay - dep_delay > 30)
filtered_flights
library(nycflights13)
data(flights)
flights
library(nycflights13)
data(flights)
# Trong một quy trình duy nhất cho từng điều kiện, hãy tìm tất cả các chuyến bay đáp ứng điều
# kiện:
#   • Đến nơi trễ từ hai giờ trở lên
# • Bay tới Houston (IAH hoặc HOU)
# • Được điều hành bởi United, American hoặc Delta
# • Khởi hành vào mùa hè (tháng 7, tháng 8, tháng 9)
# • Đến muộn hơn hai tiếng nhưng không cất cánh muộn
# • Bị trì hoãn ít nhất một giờ nhưng lại kéo dài hơn 30 phút trên chuyến bay
filtered_flights <- flights %>%
filter(
(arr_delay >= 120) &
(dest %in% c("IAH", "HOU")) &
(carrier %in% c("UA", "AA", "DL")) &
(month %in% 7:9) &
(dep_delay > 0 & dep_delay < 120) &
(dep_delay >= 60 & dep_delay < 90)
)
filtered_flights
sorted_flights <- flights %>%
arrange(desc(dep_delay))
sorted_flights
latest_flight <- flights %>%
arrange(desc(dep_time)) %>%
slice(1)
earliest_flight <- flights %>%
arrange(dep_time) %>%
slice(1)
latest_flight <- flights %>%
arrange(desc(dep_delay)) %>%
slice(1)
earliest_flight <- flights %>%
arrange(dep_delay) %>%
slice(1)
library(nycflights13)
data(flights)
# Trong một quy trình duy nhất cho từng điều kiện, hãy tìm tất cả các chuyến bay đáp ứng điều
# kiện:
#   • Đến nơi trễ từ hai giờ trở lên
# • Bay tới Houston (IAH hoặc HOU)
# • Được điều hành bởi United, American hoặc Delta
# • Khởi hành vào mùa hè (tháng 7, tháng 8, tháng 9)
# • Đến muộn hơn hai tiếng nhưng không cất cánh muộn
# • Bị trì hoãn ít nhất một giờ nhưng lại kéo dài hơn 30 phút trên chuyến bay
filtered_flights <- flights %>%
filter(
(arr_delay >= 120) &
(dest %in% c("IAH", "HOU")) &
(carrier %in% c("UA", "AA", "DL")) &
(month %in% 7:9) &
(dep_delay > 0 & dep_delay < 120) &
(dep_delay >= 60 & dep_delay < 90)
)
filtered_flights
#  Sắp xếp flights để tìm chuyến bay có thời gian khởi hành trễ nhất. Tìm các chuyến bay khởi
# hành sớm nhất vào buổi sáng.
latest_flight <- flights %>%
arrange(desc(dep_delay)) %>%
slice(1)
earliest_flight <- flights %>%
arrange(d
latest_flight <- flights %>%
library(nycflights13)
data(flights)
# Trong một quy trình duy nhất cho từng điều kiện, hãy tìm tất cả các chuyến bay đáp ứng điều
# kiện:
#   • Đến nơi trễ từ hai giờ trở lên
# • Bay tới Houston (IAH hoặc HOU)
# • Được điều hành bởi United, American hoặc Delta
# • Khởi hành vào mùa hè (tháng 7, tháng 8, tháng 9)
# • Đến muộn hơn hai tiếng nhưng không cất cánh muộn
# • Bị trì hoãn ít nhất một giờ nhưng lại kéo dài hơn 30 phút trên chuyến bay
filtered_flights <- flights %>%
filter(
(arr_delay >= 120) &
(dest %in% c("IAH", "HOU")) &
(carrier %in% c("UA", "AA", "DL")) &
(month %in% 7:9) &
(dep_delay > 0 & dep_delay < 120) &
(dep_delay >= 60 & dep_delay < 90)
)
filtered_flights
#  Sắp xếp flights để tìm chuyến bay có thời gian khởi hành trễ nhất. Tìm các chuyến bay khởi
# hành sớm nhất vào buổi sáng.
latest_flight <- flights %>%
arrange(desc(dep_delay)) %>%
slice(1)
latest_flight
earliest_flight <- flights %>%
arrange(dep_delay) %>%
slice(1)
earliest_flight
fastest_flight <- flights %>%
mutate(speed = distance / air_time * 60) %>%
arrange(desc(speed))
fastest_flight <- flights %>%
mutate(speed = distance / air_time * 60) %>%
arrange(desc(speed))
fastest_flight
daily_flights <- flights %>%
group_by(year, month, day) %>%
summarise(n = n())
daily_flights
longest_flight <- flights %>%
arrange(desc(distance))
longest_flight
shortest_flight <- flights %>%
arrange(distance)
shortest_flight
# So sánh các biến dep_time, sched_dep_time và dep_delay, liệu chúng có mối liên hệ nào với nhau
ggplot(flights, aes(x = dep_time, y = dep_delay)) +
geom_point()
ggplot(flights, aes(x = sched_dep_time, y = dep_delay)) +
geom_point()
flights_updated <- flights %>%
rename(air_time_min = air_time) %>%
relocate(air_time_min, .before = year)
source("~/data processing/EDA_1/test.R", echo=TRUE)
flights %>%
select(starts_with("dep"), ends_with("time"), contains("delay"))
flights_updated <- flights %>%
rename(air_time_min = air_time) %>%
relocate(air_time_min, .before = year)
setwd("~/data processing/EDA_1")
library(nycflights13)
data(flights)
glimpse(flights)
library(dplyr)
library(nycflights13)
data(flights)
glimpse(flights)
library(dplyr)
library(nycflights13)
data(flights)
glimpse(flights)
# Trong một quy trình duy nhất cho từng điều kiện, hãy tìm tất cả các chuyến bay đáp ứng điều
# kiện:
#   • Đến nơi trễ từ hai giờ trở lên
flights %>%
filter(arr_delay >= 120) %>%
arrange(desc(arr_delay))
# • Bay tới Houston (IAH hoặc HOU)
flights %>%
filter(dest %in% c("IAH", "HOU"))
# • Được điều hành bởi United, American hoặc Delta
flights %>%
filter(carrier %in% c("UA", "DL", "AA"))
# • Khởi hành vào mùa hè (tháng 7, tháng 8, tháng 9)
flights %>%
filter(month %in% c(7, 8, 9))
# • Đến muộn hơn hai tiếng nhưng không cất cánh muộn
flights %>%
filter(arr_delay >= 120 & dep_delay <= 0)
# • Bị trì hoãn ít nhất một giờ nhưng lại kéo dài hơn 30 phút trên chuyến bay
flights %>%
filter(dep_delay >= 60 & dep_delay - arr_delay > 30)
flights |>
relocate(dep_time, sched_dep_time, dep_delay)
source("~/data processing/EDA_1/EDA_1.R", echo=TRUE)
trans_time_delay <- function(sched, delay){
temp <- sched %/% 100 * 60 + sched %% 100 + delay
res <- temp %/% 60 * 100 + temp %% 60
res <- if_else(res > 2400, res - 2400, res)
return(res)
}
flights_6 <- flights |>
mutate(dep_time_guess = trans_time_delay(sched_dep_time, dep_delay)) |>
relocate(dep_time, dep_time_guess, sched_dep_time, dep_delay)
flights_6
variables <- c("year", "month", "day", "dep_delay", "arr_delay")
concat("Hàm any_of() được dùng để lựa chọn bất kỳ tên biến nào có trong một vector chỉ định, miễn là tên biến đó
xuất hiện trong dữ liệu.")
source("~/data processing/EDA_1/EDA_1.R", echo=TRUE)
flights |>
rename(air_time_min = air_time) |>
relocate(air_time_min)
flights  %>%
relocate(dep_time, sched_dep_time, dep_delay)
trans_time_delay <- function(sched, delay){
temp <- sched %/% 100 * 60 + sched %% 100 + delay
hours <- temp %/% 60
minutes <- temp %% 60
res <- hours * 100 + minutes
res <- if_else(res >= 2400, res - 2400, res)
return(res)
}
flights_6 <- flights  %>%
mutate(dep_time_guess = trans_time_delay(sched_dep_time, dep_delay))  %>%
relocate(dep_time, dep_time_guess, sched_dep_time, dep_delay)
flights_6
flights |>
relocate(dep_time, sched_dep_time, dep_delay)
trans_time_delay <- function(sched, delay){
temp <- sched %/% 100 * 60 + sched %% 100 + delay
res <- temp %/% 60 * 100 + temp %% 60
res <- if_else(res > 2400, res - 2400, res)
return(res)
}
flights_6 <- flights |>
mutate(dep_time_guess = trans_time_delay(sched_dep_time, dep_delay)) |>
relocate(dep_time, dep_time_guess, sched_dep_time, dep_delay)
flights_6
flights |>
relocate(dep_time, sched_dep_time, dep_delay)
trans_time_delay <- function(sched, delay){
temp <- sched %/% 100 * 60 + sched %% 100 + delay
res <- temp %/% 60 * 100 + temp %% 60
res <- if_else(res > 2400, res - 2400, res)
return(res)
}
flights_6 <- flights |>
mutate(dep_time_guess = trans_time_delay(sched_dep_time, dep_delay)) |>
relocate(dep_time, dep_time_guess, sched_dep_time, dep_delay)
flights_6
all.equal(flights_6$dep_time, flights_6$dep_time_guess)
